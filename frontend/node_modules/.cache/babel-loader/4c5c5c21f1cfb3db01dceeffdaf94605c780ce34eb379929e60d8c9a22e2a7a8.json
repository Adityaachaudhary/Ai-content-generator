{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{PayPalScriptProvider,PayPalButtons}from'@paypal/react-paypal-js';import{createPayPalOrder,capturePayPalOrder,clearPaymentStatus}from'../features/subscription/subscriptionSlice';import{FaSpinner}from'react-icons/fa';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PayPalButton=_ref=>{let{planId,onSuccess}=_ref;const dispatch=useDispatch();const{paymentStatus,isLoading,isError,message}=useSelector(state=>state.subscription);useEffect(()=>{// Clear any previous payment status when component mounts\ndispatch(clearPaymentStatus());},[dispatch]);useEffect(()=>{// Handle successful payment\nif(paymentStatus==='COMPLETED'){if(onSuccess){onSuccess(planId);}}},[paymentStatus,planId,onSuccess]);const handleCreateOrder=async()=>{try{const actionResult=await dispatch(createPayPalOrder(planId));if(createPayPalOrder.fulfilled.match(actionResult)){return actionResult.payload.orderId;}}catch(error){console.error('Error creating order:',error);}};const handleApprove=async data=>{try{await dispatch(capturePayPalOrder(data.orderID));}catch(error){console.error('Error capturing order:',error);}};// PayPal client configuration\nconst paypalOptions={\"client-id\":process.env.REACT_APP_PAYPAL_CLIENT_ID||\"test\",currency:\"USD\",intent:\"capture\"};if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center py-4\",children:/*#__PURE__*/_jsx(FaSpinner,{className:\"animate-spin text-2xl text-primary-500\"})});}if(paymentStatus==='COMPLETED'){return/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-50 text-green-800 p-4 rounded-lg\",children:\"Payment successful! Your subscription has been updated.\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full\",children:[isError&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 text-red-800 p-4 rounded-lg mb-4\",children:message}),/*#__PURE__*/_jsx(PayPalScriptProvider,{options:paypalOptions,children:/*#__PURE__*/_jsx(PayPalButtons,{style:{layout:'vertical',color:'blue',shape:'rect',label:'subscribe'},createOrder:handleCreateOrder,onApprove:handleApprove,onError:err=>{console.error('PayPal error:',err);}})})]});};export default PayPalButton;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","PayPalScriptProvider","PayPalButtons","createPayPalOrder","capturePayPalOrder","clearPaymentStatus","FaSpinner","jsx","_jsx","jsxs","_jsxs","PayPalButton","_ref","planId","onSuccess","dispatch","paymentStatus","isLoading","isError","message","state","subscription","handleCreateOrder","actionResult","fulfilled","match","payload","orderId","error","console","handleApprove","data","orderID","paypalOptions","process","env","REACT_APP_PAYPAL_CLIENT_ID","currency","intent","className","children","options","style","layout","color","shape","label","createOrder","onApprove","onError","err"],"sources":["C:/Users/harsh/Desktop/Ai-content generator/frontend/src/components/PayPalButton.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { \r\n  PayPalScriptProvider, \r\n  PayPalButtons \r\n} from '@paypal/react-paypal-js';\r\nimport { \r\n  createPayPalOrder, \r\n  capturePayPalOrder, \r\n  clearPaymentStatus \r\n} from '../features/subscription/subscriptionSlice';\r\nimport { FaSpinner } from 'react-icons/fa';\r\n\r\nconst PayPalButton = ({ planId, onSuccess }) => {\r\n  const dispatch = useDispatch();\r\n  const { paymentStatus, isLoading, isError, message } = useSelector(\r\n    (state) => state.subscription\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Clear any previous payment status when component mounts\r\n    dispatch(clearPaymentStatus());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    // Handle successful payment\r\n    if (paymentStatus === 'COMPLETED') {\r\n      if (onSuccess) {\r\n        onSuccess(planId);\r\n      }\r\n    }\r\n  }, [paymentStatus, planId, onSuccess]);\r\n\r\n  const handleCreateOrder = async () => {\r\n    try {\r\n      const actionResult = await dispatch(createPayPalOrder(planId));\r\n      if (createPayPalOrder.fulfilled.match(actionResult)) {\r\n        return actionResult.payload.orderId;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating order:', error);\r\n    }\r\n  };\r\n\r\n  const handleApprove = async (data) => {\r\n    try {\r\n      await dispatch(capturePayPalOrder(data.orderID));\r\n    } catch (error) {\r\n      console.error('Error capturing order:', error);\r\n    }\r\n  };\r\n\r\n  // PayPal client configuration\r\n  const paypalOptions = {\r\n    \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID || \"test\",\r\n    currency: \"USD\",\r\n    intent: \"capture\",\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center py-4\">\r\n        <FaSpinner className=\"animate-spin text-2xl text-primary-500\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (paymentStatus === 'COMPLETED') {\r\n    return (\r\n      <div className=\"bg-green-50 text-green-800 p-4 rounded-lg\">\r\n        Payment successful! Your subscription has been updated.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {isError && (\r\n        <div className=\"bg-red-50 text-red-800 p-4 rounded-lg mb-4\">\r\n          {message}\r\n        </div>\r\n      )}\r\n      \r\n      <PayPalScriptProvider options={paypalOptions}>\r\n        <PayPalButtons\r\n          style={{\r\n            layout: 'vertical',\r\n            color: 'blue',\r\n            shape: 'rect',\r\n            label: 'subscribe',\r\n          }}\r\n          createOrder={handleCreateOrder}\r\n          onApprove={handleApprove}\r\n          onError={(err) => {\r\n            console.error('PayPal error:', err);\r\n          }}\r\n        />\r\n      </PayPalScriptProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PayPalButton; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}