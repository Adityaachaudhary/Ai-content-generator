{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/payments';\nconst initialState = {\n  plans: [],\n  userSubscription: null,\n  orderId: null,\n  paymentStatus: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// Get subscription plans\nexport const getSubscriptionPlans = createAsyncThunk('subscription/getPlans', async (_, thunkAPI) => {\n  try {\n    const response = await axios.get(`${API_URL}/plans`);\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.msg || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Create PayPal order\nexport const createPayPalOrder = createAsyncThunk('subscription/createOrder', async (planId, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    const config = {\n      headers: {\n        'x-auth-token': token\n      }\n    };\n    const response = await axios.post(`${API_URL}/create-order`, {\n      planId\n    }, config);\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.msg || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Capture PayPal order\nexport const capturePayPalOrder = createAsyncThunk('subscription/captureOrder', async (orderId, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    const config = {\n      headers: {\n        'x-auth-token': token\n      }\n    };\n    const response = await axios.post(`${API_URL}/capture-order`, {\n      orderId\n    }, config);\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.msg || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Get user subscription details\nexport const getUserSubscription = createAsyncThunk('subscription/getUserSubscription', async (_, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    const config = {\n      headers: {\n        'x-auth-token': token\n      }\n    };\n    const response = await axios.get(`${API_URL}/subscription`, config);\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.msg || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const subscriptionSlice = createSlice({\n  name: 'subscription',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    },\n    clearPaymentStatus: state => {\n      state.paymentStatus = null;\n      state.orderId = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getSubscriptionPlans.pending, state => {\n      state.isLoading = true;\n    }).addCase(getSubscriptionPlans.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.plans = action.payload;\n    }).addCase(getSubscriptionPlans.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(createPayPalOrder.pending, state => {\n      state.isLoading = true;\n    }).addCase(createPayPalOrder.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.orderId = action.payload.orderId;\n    }).addCase(createPayPalOrder.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(capturePayPalOrder.pending, state => {\n      state.isLoading = true;\n    }).addCase(capturePayPalOrder.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.paymentStatus = action.payload.status;\n      // Update subscription details after successful payment\n      if (action.payload.success) {\n        state.userSubscription = {\n          status: action.payload.planId,\n          isActive: true\n        };\n      }\n    }).addCase(capturePayPalOrder.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(getUserSubscription.pending, state => {\n      state.isLoading = true;\n    }).addCase(getUserSubscription.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.userSubscription = action.payload.subscription;\n    }).addCase(getUserSubscription.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset,\n  clearPaymentStatus\n} = subscriptionSlice.actions;\nexport default subscriptionSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","initialState","plans","userSubscription","orderId","paymentStatus","isError","isSuccess","isLoading","message","getSubscriptionPlans","_","thunkAPI","response","get","data","error","msg","toString","rejectWithValue","createPayPalOrder","planId","token","getState","auth","user","config","headers","post","capturePayPalOrder","getUserSubscription","subscriptionSlice","name","reducers","reset","state","clearPaymentStatus","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","status","success","isActive","subscription","actions","reducer"],"sources":["C:/Users/harsh/Desktop/Ai-content generator/frontend/src/features/subscription/subscriptionSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/payments';\r\n\r\nconst initialState = {\r\n  plans: [],\r\n  userSubscription: null,\r\n  orderId: null,\r\n  paymentStatus: null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n\r\n// Get subscription plans\r\nexport const getSubscriptionPlans = createAsyncThunk(\r\n  'subscription/getPlans',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/plans`);\r\n      return response.data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.msg) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Create PayPal order\r\nexport const createPayPalOrder = createAsyncThunk(\r\n  'subscription/createOrder',\r\n  async (planId, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      };\r\n\r\n      const response = await axios.post(\r\n        `${API_URL}/create-order`,\r\n        { planId },\r\n        config\r\n      );\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.msg) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Capture PayPal order\r\nexport const capturePayPalOrder = createAsyncThunk(\r\n  'subscription/captureOrder',\r\n  async (orderId, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      };\r\n\r\n      const response = await axios.post(\r\n        `${API_URL}/capture-order`,\r\n        { orderId },\r\n        config\r\n      );\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.msg) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Get user subscription details\r\nexport const getUserSubscription = createAsyncThunk(\r\n  'subscription/getUserSubscription',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      };\r\n\r\n      const response = await axios.get(`${API_URL}/subscription`, config);\r\n      return response.data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.msg) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const subscriptionSlice = createSlice({\r\n  name: 'subscription',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = '';\r\n    },\r\n    clearPaymentStatus: (state) => {\r\n      state.paymentStatus = null;\r\n      state.orderId = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getSubscriptionPlans.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getSubscriptionPlans.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.plans = action.payload;\r\n      })\r\n      .addCase(getSubscriptionPlans.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(createPayPalOrder.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createPayPalOrder.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.orderId = action.payload.orderId;\r\n      })\r\n      .addCase(createPayPalOrder.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(capturePayPalOrder.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(capturePayPalOrder.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.paymentStatus = action.payload.status;\r\n        // Update subscription details after successful payment\r\n        if (action.payload.success) {\r\n          state.userSubscription = {\r\n            status: action.payload.planId,\r\n            isActive: true\r\n          };\r\n        }\r\n      })\r\n      .addCase(capturePayPalOrder.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(getUserSubscription.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getUserSubscription.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.userSubscription = action.payload.subscription;\r\n      })\r\n      .addCase(getUserSubscription.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, clearPaymentStatus } = subscriptionSlice.actions;\r\nexport default subscriptionSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}