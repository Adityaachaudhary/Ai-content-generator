{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Use relative URL to leverage the proxy configuration in package.json\nconst API_URL = '/api';\n\n// Get user from localStorage\nconst getUserFromStorage = () => {\n  try {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  } catch (error) {\n    console.error('Error parsing user from localStorage:', error);\n    // Clear corrupted storage\n    localStorage.removeItem('user');\n    return null;\n  }\n};\nconst user = getUserFromStorage();\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// Get current user\nexport const getCurrentUser = createAsyncThunk('auth/getCurrentUser', async (_, thunkAPI) => {\n  try {\n    var _thunkAPI$getState$au;\n    console.log('Getting current user');\n    const token = (_thunkAPI$getState$au = thunkAPI.getState().auth.user) === null || _thunkAPI$getState$au === void 0 ? void 0 : _thunkAPI$getState$au.token;\n    if (!token) {\n      console.error('No token found when getting current user');\n      return thunkAPI.rejectWithValue('No token found');\n    }\n    const config = {\n      headers: {\n        'x-auth-token': token\n      }\n    };\n    console.log(`Making request to ${API_URL}/auth/me with token: ${token.substring(0, 10)}...`);\n    const response = await axios.get(`${API_URL}/auth/me`, config);\n    console.log('Current user fetch successful:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting current user:', error);\n\n    // Detailed error logging\n    if (error.response) {\n      console.error('Error response data:', error.response.data);\n      console.error('Error response status:', error.response.status);\n    } else if (error.request) {\n      console.error('Error request:', error.request);\n    }\n    const message = error.response && error.response.data && error.response.data.msg || error.message || error.toString();\n\n    // Logout user if token is invalid\n    if (error.response && error.response.status === 401) {\n      console.warn('Token invalid, removing user from localStorage');\n      localStorage.removeItem('user');\n    }\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Login user (when receiving token from Google OAuth callback)\nexport const loginWithToken = createAsyncThunk('auth/loginWithToken', async (token, thunkAPI) => {\n  try {\n    console.log('Logging in with token');\n    if (!token) {\n      console.error('No token provided for login');\n      return thunkAPI.rejectWithValue('No token provided');\n    }\n\n    // Save the token to localStorage\n    const userData = {\n      token\n    };\n    localStorage.setItem('user', JSON.stringify(userData));\n\n    // Get user details\n    const config = {\n      headers: {\n        'x-auth-token': token\n      }\n    };\n    console.log(`Getting user details from ${API_URL}/auth/me with token: ${token.substring(0, 10)}...`);\n    const response = await axios.get(`${API_URL}/auth/me`, config);\n    console.log('User details retrieved successfully:', response.data);\n\n    // Return user data along with token\n    return {\n      ...response.data,\n      token\n    };\n  } catch (error) {\n    console.error('Error logging in with token:', error);\n\n    // Detailed error logging\n    if (error.response) {\n      console.error('Error response data:', error.response.data);\n      console.error('Error response status:', error.response.status);\n    }\n    const message = error.response && error.response.data && error.response.data.msg || error.message || error.toString();\n\n    // Remove invalid token\n    localStorage.removeItem('user');\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Logout user\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  localStorage.removeItem('user');\n  console.log('User logged out, localStorage cleared');\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getCurrentUser.pending, state => {\n      state.isLoading = true;\n      state.isError = false;\n    }).addCase(getCurrentUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n    }).addCase(getCurrentUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(loginWithToken.pending, state => {\n      state.isLoading = true;\n      state.isError = false;\n    }).addCase(loginWithToken.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(loginWithToken.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","getUserFromStorage","user","localStorage","getItem","JSON","parse","error","console","removeItem","initialState","isError","isSuccess","isLoading","message","getCurrentUser","_","thunkAPI","_thunkAPI$getState$au","log","token","getState","auth","rejectWithValue","config","headers","substring","response","get","data","status","request","msg","toString","warn","loginWithToken","userData","setItem","stringify","logout","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/harsh/Desktop/Ai-content generator/frontend/src/features/auth/authSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Use relative URL to leverage the proxy configuration in package.json\r\nconst API_URL = '/api';\r\n\r\n// Get user from localStorage\r\nconst getUserFromStorage = () => {\r\n  try {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  } catch (error) {\r\n    console.error('Error parsing user from localStorage:', error);\r\n    // Clear corrupted storage\r\n    localStorage.removeItem('user');\r\n    return null;\r\n  }\r\n};\r\n\r\nconst user = getUserFromStorage();\r\n\r\nconst initialState = {\r\n  user: user ? user : null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n\r\n// Get current user\r\nexport const getCurrentUser = createAsyncThunk(\r\n  'auth/getCurrentUser',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      console.log('Getting current user');\r\n      const token = thunkAPI.getState().auth.user?.token;\r\n      \r\n      if (!token) {\r\n        console.error('No token found when getting current user');\r\n        return thunkAPI.rejectWithValue('No token found');\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      };\r\n\r\n      console.log(`Making request to ${API_URL}/auth/me with token: ${token.substring(0, 10)}...`);\r\n      const response = await axios.get(`${API_URL}/auth/me`, config);\r\n      console.log('Current user fetch successful:', response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error getting current user:', error);\r\n      \r\n      // Detailed error logging\r\n      if (error.response) {\r\n        console.error('Error response data:', error.response.data);\r\n        console.error('Error response status:', error.response.status);\r\n      } else if (error.request) {\r\n        console.error('Error request:', error.request);\r\n      }\r\n      \r\n      const message = \r\n        (error.response && \r\n          error.response.data && \r\n          error.response.data.msg) ||\r\n        error.message ||\r\n        error.toString();\r\n      \r\n      // Logout user if token is invalid\r\n      if (error.response && error.response.status === 401) {\r\n        console.warn('Token invalid, removing user from localStorage');\r\n        localStorage.removeItem('user');\r\n      }\r\n\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Login user (when receiving token from Google OAuth callback)\r\nexport const loginWithToken = createAsyncThunk(\r\n  'auth/loginWithToken',\r\n  async (token, thunkAPI) => {\r\n    try {\r\n      console.log('Logging in with token');\r\n      if (!token) {\r\n        console.error('No token provided for login');\r\n        return thunkAPI.rejectWithValue('No token provided');\r\n      }\r\n      \r\n      // Save the token to localStorage\r\n      const userData = { token };\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n\r\n      // Get user details\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      };\r\n\r\n      console.log(`Getting user details from ${API_URL}/auth/me with token: ${token.substring(0, 10)}...`);\r\n      const response = await axios.get(`${API_URL}/auth/me`, config);\r\n      console.log('User details retrieved successfully:', response.data);\r\n      \r\n      // Return user data along with token\r\n      return { ...response.data, token };\r\n    } catch (error) {\r\n      console.error('Error logging in with token:', error);\r\n      \r\n      // Detailed error logging\r\n      if (error.response) {\r\n        console.error('Error response data:', error.response.data);\r\n        console.error('Error response status:', error.response.status);\r\n      }\r\n      \r\n      const message = \r\n        (error.response && \r\n          error.response.data && \r\n          error.response.data.msg) ||\r\n        error.message ||\r\n        error.toString();\r\n      \r\n      // Remove invalid token\r\n      localStorage.removeItem('user');\r\n      \r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Logout user\r\nexport const logout = createAsyncThunk('auth/logout', async () => {\r\n  localStorage.removeItem('user');\r\n  console.log('User logged out, localStorage cleared');\r\n});\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = '';\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getCurrentUser.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.isError = false;\r\n      })\r\n      .addCase(getCurrentUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = { ...state.user, ...action.payload };\r\n      })\r\n      .addCase(getCurrentUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n      .addCase(loginWithToken.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.isError = false;\r\n      })\r\n      .addCase(loginWithToken.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(loginWithToken.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = authSlice.actions;\r\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}