{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Desktop\\\\Ai-content generator\\\\frontend\\\\src\\\\components\\\\PayPalButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\nimport { createPayPalOrder, capturePayPalOrder, clearPaymentStatus } from '../features/subscription/subscriptionSlice';\nimport { FaSpinner } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PayPalButton = ({\n  planId,\n  onSuccess\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    orderId,\n    paymentStatus,\n    isLoading,\n    isError,\n    message\n  } = useSelector(state => state.subscription);\n  useEffect(() => {\n    // Clear any previous payment status when component mounts\n    dispatch(clearPaymentStatus());\n  }, [dispatch]);\n  useEffect(() => {\n    // Handle successful payment\n    if (paymentStatus === 'COMPLETED') {\n      if (onSuccess) {\n        onSuccess(planId);\n      }\n    }\n  }, [paymentStatus, planId, onSuccess]);\n  const handleCreateOrder = async () => {\n    try {\n      const actionResult = await dispatch(createPayPalOrder(planId));\n      if (createPayPalOrder.fulfilled.match(actionResult)) {\n        return actionResult.payload.orderId;\n      }\n    } catch (error) {\n      console.error('Error creating order:', error);\n    }\n  };\n  const handleApprove = async data => {\n    try {\n      await dispatch(capturePayPalOrder(data.orderID));\n    } catch (error) {\n      console.error('Error capturing order:', error);\n    }\n  };\n\n  // PayPal client configuration\n  const paypalOptions = {\n    \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID || \"test\",\n    currency: \"USD\",\n    intent: \"capture\"\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center py-4\",\n      children: /*#__PURE__*/_jsxDEV(FaSpinner, {\n        className: \"animate-spin text-2xl text-primary-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentStatus === 'COMPLETED') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-50 text-green-800 p-4 rounded-lg\",\n      children: \"Payment successful! Your subscription has been updated.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 text-red-800 p-4 rounded-lg mb-4\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n      options: paypalOptions,\n      children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n        style: {\n          layout: 'vertical',\n          color: 'blue',\n          shape: 'rect',\n          label: 'subscribe'\n        },\n        createOrder: handleCreateOrder,\n        onApprove: handleApprove,\n        onError: err => {\n          console.error('PayPal error:', err);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(PayPalButton, \"EAuAmTlbGK3CW85EiSRiq6Cu7cs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PayPalButton;\nexport default PayPalButton;\nvar _c;\n$RefreshReg$(_c, \"PayPalButton\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","PayPalScriptProvider","PayPalButtons","createPayPalOrder","capturePayPalOrder","clearPaymentStatus","FaSpinner","jsxDEV","_jsxDEV","PayPalButton","planId","onSuccess","_s","dispatch","orderId","paymentStatus","isLoading","isError","message","state","subscription","handleCreateOrder","actionResult","fulfilled","match","payload","error","console","handleApprove","data","orderID","paypalOptions","process","env","REACT_APP_PAYPAL_CLIENT_ID","currency","intent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","style","layout","color","shape","label","createOrder","onApprove","onError","err","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Desktop/Ai-content generator/frontend/src/components/PayPalButton.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { \r\n  PayPalScriptProvider, \r\n  PayPalButtons \r\n} from '@paypal/react-paypal-js';\r\nimport { \r\n  createPayPalOrder, \r\n  capturePayPalOrder, \r\n  clearPaymentStatus \r\n} from '../features/subscription/subscriptionSlice';\r\nimport { FaSpinner } from 'react-icons/fa';\r\n\r\nconst PayPalButton = ({ planId, onSuccess }) => {\r\n  const dispatch = useDispatch();\r\n  const { orderId, paymentStatus, isLoading, isError, message } = useSelector(\r\n    (state) => state.subscription\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Clear any previous payment status when component mounts\r\n    dispatch(clearPaymentStatus());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    // Handle successful payment\r\n    if (paymentStatus === 'COMPLETED') {\r\n      if (onSuccess) {\r\n        onSuccess(planId);\r\n      }\r\n    }\r\n  }, [paymentStatus, planId, onSuccess]);\r\n\r\n  const handleCreateOrder = async () => {\r\n    try {\r\n      const actionResult = await dispatch(createPayPalOrder(planId));\r\n      if (createPayPalOrder.fulfilled.match(actionResult)) {\r\n        return actionResult.payload.orderId;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating order:', error);\r\n    }\r\n  };\r\n\r\n  const handleApprove = async (data) => {\r\n    try {\r\n      await dispatch(capturePayPalOrder(data.orderID));\r\n    } catch (error) {\r\n      console.error('Error capturing order:', error);\r\n    }\r\n  };\r\n\r\n  // PayPal client configuration\r\n  const paypalOptions = {\r\n    \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID || \"test\",\r\n    currency: \"USD\",\r\n    intent: \"capture\",\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center py-4\">\r\n        <FaSpinner className=\"animate-spin text-2xl text-primary-500\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (paymentStatus === 'COMPLETED') {\r\n    return (\r\n      <div className=\"bg-green-50 text-green-800 p-4 rounded-lg\">\r\n        Payment successful! Your subscription has been updated.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {isError && (\r\n        <div className=\"bg-red-50 text-red-800 p-4 rounded-lg mb-4\">\r\n          {message}\r\n        </div>\r\n      )}\r\n      \r\n      <PayPalScriptProvider options={paypalOptions}>\r\n        <PayPalButtons\r\n          style={{\r\n            layout: 'vertical',\r\n            color: 'blue',\r\n            shape: 'rect',\r\n            label: 'subscribe',\r\n          }}\r\n          createOrder={handleCreateOrder}\r\n          onApprove={handleApprove}\r\n          onError={(err) => {\r\n            console.error('PayPal error:', err);\r\n          }}\r\n        />\r\n      </PayPalScriptProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PayPalButton; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}