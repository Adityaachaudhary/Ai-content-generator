{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/payments';\nconst initialState = {\n  plans: [],\n  customerPortalUrl: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// Get subscription plans\nexport const getSubscriptionPlans = createAsyncThunk('subscription/getPlans', async (_, thunkAPI) => {\n  try {\n    const response = await axios.get(`${API_URL}/plans`);\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.msg || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Get customer portal URL\nexport const getCustomerPortal = createAsyncThunk('subscription/getCustomerPortal', async (_, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    const config = {\n      headers: {\n        'x-auth-token': token\n      }\n    };\n    const response = await axios.get(`${API_URL}/customer-portal`, config);\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.msg || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const subscriptionSlice = createSlice({\n  name: 'subscription',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getSubscriptionPlans.pending, state => {\n      state.isLoading = true;\n    }).addCase(getSubscriptionPlans.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.plans = action.payload;\n    }).addCase(getSubscriptionPlans.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(getCustomerPortal.pending, state => {\n      state.isLoading = true;\n    }).addCase(getCustomerPortal.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.customerPortalUrl = action.payload.customerPortalUrl;\n    }).addCase(getCustomerPortal.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = subscriptionSlice.actions;\nexport default subscriptionSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","initialState","plans","customerPortalUrl","isError","isSuccess","isLoading","message","getSubscriptionPlans","_","thunkAPI","response","get","data","error","msg","toString","rejectWithValue","getCustomerPortal","token","getState","auth","user","config","headers","subscriptionSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/harsh/Desktop/Ai-content generator/frontend/src/features/subscription/subscriptionSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/payments';\r\n\r\nconst initialState = {\r\n  plans: [],\r\n  customerPortalUrl: null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n\r\n// Get subscription plans\r\nexport const getSubscriptionPlans = createAsyncThunk(\r\n  'subscription/getPlans',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/plans`);\r\n      return response.data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.msg) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Get customer portal URL\r\nexport const getCustomerPortal = createAsyncThunk(\r\n  'subscription/getCustomerPortal',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user.token;\r\n\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      };\r\n\r\n      const response = await axios.get(`${API_URL}/customer-portal`, config);\r\n      return response.data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.msg) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const subscriptionSlice = createSlice({\r\n  name: 'subscription',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = '';\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getSubscriptionPlans.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getSubscriptionPlans.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.plans = action.payload;\r\n      })\r\n      .addCase(getSubscriptionPlans.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(getCustomerPortal.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getCustomerPortal.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.customerPortalUrl = action.payload.customerPortalUrl;\r\n      })\r\n      .addCase(getCustomerPortal.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = subscriptionSlice.actions;\r\nexport default subscriptionSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}